{
  "version": 3,
  "sources": ["../../../../../node_modules/angular2-draggable/fesm2022/angular2-draggable.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Output, Input, HostListener, NgModule } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nclass Position {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  static fromEvent(e, el = null) {\n    /**\n     * Fix issue: Resize doesn't work on Windows10 IE11 (and on some windows 7 IE11)\n     * https://github.com/xieziyu/angular2-draggable/issues/164\n     * e instanceof MouseEvent check returns false on IE11\n     */\n    if (this.isMouseEvent(e)) {\n      return new Position(e.clientX, e.clientY);\n    } else {\n      if (el === null || e.changedTouches.length === 1) {\n        return new Position(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n      }\n      /**\n       * Fix issue: Multiple phone draggables at the same time\n       * https://github.com/xieziyu/angular2-draggable/issues/128\n       */\n      for (let i = 0; i < e.changedTouches.length; i++) {\n        if (e.changedTouches[i].target === el) {\n          return new Position(e.changedTouches[i].clientX, e.changedTouches[i].clientY);\n        }\n      }\n    }\n    return null;\n  }\n  static isMouseEvent(e) {\n    return Object.prototype.toString.apply(e).indexOf('MouseEvent') === 8;\n  }\n  static isIPosition(obj) {\n    return !!obj && 'x' in obj && 'y' in obj;\n  }\n  static getCurrent(el) {\n    let pos = new Position(0, 0);\n    if (window) {\n      const computed = window.getComputedStyle(el);\n      if (computed) {\n        let x = parseInt(computed.getPropertyValue('left'), 10);\n        let y = parseInt(computed.getPropertyValue('top'), 10);\n        pos.x = isNaN(x) ? 0 : x;\n        pos.y = isNaN(y) ? 0 : y;\n      }\n      return pos;\n    } else {\n      console.error('Not Supported!');\n      return null;\n    }\n  }\n  static copy(p) {\n    return new Position(0, 0).set(p);\n  }\n  get value() {\n    return {\n      x: this.x,\n      y: this.y\n    };\n  }\n  add(p) {\n    this.x += p.x;\n    this.y += p.y;\n    return this;\n  }\n  subtract(p) {\n    this.x -= p.x;\n    this.y -= p.y;\n    return this;\n  }\n  multiply(n) {\n    this.x *= n;\n    this.y *= n;\n  }\n  divide(n) {\n    this.x /= n;\n    this.y /= n;\n  }\n  reset() {\n    this.x = 0;\n    this.y = 0;\n    return this;\n  }\n  set(p) {\n    this.x = p.x;\n    this.y = p.y;\n    return this;\n  }\n}\nclass HelperBlock {\n  constructor(parent, renderer) {\n    this.parent = parent;\n    this.renderer = renderer;\n    this._added = false;\n    // generate helper div\n    let helper = renderer.createElement('div');\n    renderer.setStyle(helper, 'position', 'absolute');\n    renderer.setStyle(helper, 'width', '100%');\n    renderer.setStyle(helper, 'height', '100%');\n    renderer.setStyle(helper, 'background-color', 'transparent');\n    renderer.setStyle(helper, 'top', '0');\n    renderer.setStyle(helper, 'left', '0');\n    // done\n    this._helper = helper;\n  }\n  add() {\n    // append div to parent\n    if (this.parent && !this._added) {\n      this.parent.appendChild(this._helper);\n      this._added = true;\n    }\n  }\n  remove() {\n    if (this.parent && this._added) {\n      this.parent.removeChild(this._helper);\n      this._added = false;\n    }\n  }\n  dispose() {\n    this._helper = null;\n    this._added = false;\n  }\n  get el() {\n    return this._helper;\n  }\n}\nclass AngularDraggableDirective {\n  /** Set z-index when not dragging */\n  set zIndex(setting) {\n    this.renderer.setStyle(this.el.nativeElement, 'z-index', setting);\n    this._zIndex = setting;\n  }\n  set ngDraggable(setting) {\n    if (setting !== undefined && setting !== null && setting !== '') {\n      this.allowDrag = !!setting;\n      let element = this.getDragEl();\n      if (this.allowDrag) {\n        this.renderer.addClass(element, 'ng-draggable');\n      } else {\n        this.putBack();\n        this.renderer.removeClass(element, 'ng-draggable');\n      }\n    }\n  }\n  constructor(el, renderer) {\n    this.el = el;\n    this.renderer = renderer;\n    this.allowDrag = true;\n    this.moving = false;\n    this.orignal = null;\n    this.oldTrans = new Position(0, 0);\n    this.tempTrans = new Position(0, 0);\n    this.currTrans = new Position(0, 0);\n    this.oldZIndex = '';\n    this._zIndex = '';\n    this.needTransform = false;\n    this.draggingSub = null;\n    /**\n     * Bugfix: iFrames, and context unrelated elements block all events, and are unusable\n     * https://github.com/xieziyu/angular2-draggable/issues/84\n     */\n    this._helperBlock = null;\n    this.started = new EventEmitter();\n    this.stopped = new EventEmitter();\n    this.edge = new EventEmitter();\n    /** List of allowed out of bounds edges **/\n    this.outOfBounds = {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false\n    };\n    /** Round the position to nearest grid */\n    this.gridSize = 1;\n    /** Whether to limit the element stay in the bounds */\n    this.inBounds = false;\n    /** Whether the element should use it's previous drag position on a new drag event. */\n    this.trackPosition = true;\n    /** Input css scale transform of element so translations are correct */\n    this.scale = 1;\n    /** Whether to prevent default event */\n    this.preventDefaultEvent = false;\n    /** Set initial position by offsets */\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    /** Lock axis: 'x' or 'y' */\n    this.lockAxis = null;\n    /** Emit position offsets when moving */\n    this.movingOffset = new EventEmitter();\n    /** Emit position offsets when put back */\n    this.endOffset = new EventEmitter();\n    this._helperBlock = new HelperBlock(el.nativeElement, renderer);\n  }\n  ngOnInit() {\n    if (this.allowDrag) {\n      let element = this.getDragEl();\n      this.renderer.addClass(element, 'ng-draggable');\n    }\n    this.resetPosition();\n  }\n  ngOnDestroy() {\n    this.bounds = null;\n    this.handle = null;\n    this.orignal = null;\n    this.oldTrans = null;\n    this.tempTrans = null;\n    this.currTrans = null;\n    this._helperBlock.dispose();\n    this._helperBlock = null;\n    if (this.draggingSub) {\n      this.draggingSub.unsubscribe();\n    }\n  }\n  ngOnChanges(changes) {\n    if (changes['position'] && !changes['position'].isFirstChange()) {\n      let p = changes['position'].currentValue;\n      if (!this.moving) {\n        if (Position.isIPosition(p)) {\n          this.oldTrans.set(p);\n        } else {\n          this.oldTrans.reset();\n        }\n        this.transform();\n      } else {\n        this.needTransform = true;\n      }\n    }\n  }\n  ngAfterViewInit() {\n    if (this.inBounds) {\n      this.boundsCheck();\n      this.oldTrans.add(this.tempTrans);\n      this.tempTrans.reset();\n    }\n  }\n  getDragEl() {\n    return this.handle ? this.handle : this.el.nativeElement;\n  }\n  resetPosition() {\n    if (Position.isIPosition(this.position)) {\n      this.oldTrans.set(this.position);\n    } else {\n      this.oldTrans.reset();\n    }\n    this.tempTrans.reset();\n    this.transform();\n  }\n  moveTo(p) {\n    if (this.orignal) {\n      p.subtract(this.orignal);\n      this.tempTrans.set(p);\n      this.tempTrans.divide(this.scale);\n      this.transform();\n      if (this.bounds) {\n        let edgeEv = this.boundsCheck();\n        if (edgeEv) {\n          this.edge.emit(edgeEv);\n        }\n      }\n      this.movingOffset.emit(this.currTrans.value);\n    }\n  }\n  transform() {\n    let translateX = this.tempTrans.x + this.oldTrans.x;\n    let translateY = this.tempTrans.y + this.oldTrans.y;\n    if (this.lockAxis === 'x') {\n      translateX = this.oldTrans.x;\n      this.tempTrans.x = 0;\n    } else if (this.lockAxis === 'y') {\n      translateY = this.oldTrans.y;\n      this.tempTrans.y = 0;\n    }\n    // Snap to grid: by grid size\n    if (this.gridSize > 1) {\n      translateX = Math.round(translateX / this.gridSize) * this.gridSize;\n      translateY = Math.round(translateY / this.gridSize) * this.gridSize;\n    }\n    let value = `translate(${Math.round(translateX)}px, ${Math.round(translateY)}px)`;\n    this.renderer.setStyle(this.el.nativeElement, 'transform', value);\n    this.renderer.setStyle(this.el.nativeElement, '-webkit-transform', value);\n    this.renderer.setStyle(this.el.nativeElement, '-ms-transform', value);\n    this.renderer.setStyle(this.el.nativeElement, '-moz-transform', value);\n    this.renderer.setStyle(this.el.nativeElement, '-o-transform', value);\n    // save current position\n    this.currTrans.x = translateX;\n    this.currTrans.y = translateY;\n  }\n  pickUp() {\n    // get old z-index:\n    this.oldZIndex = this.el.nativeElement.style.zIndex ? this.el.nativeElement.style.zIndex : '';\n    if (window) {\n      this.oldZIndex = window.getComputedStyle(this.el.nativeElement, null).getPropertyValue('z-index');\n    }\n    if (this.zIndexMoving) {\n      this.renderer.setStyle(this.el.nativeElement, 'z-index', this.zIndexMoving);\n    }\n    if (!this.moving) {\n      this.started.emit(this.el.nativeElement);\n      this.moving = true;\n      const element = this.getDragEl();\n      this.renderer.addClass(element, 'ng-dragging');\n      /**\n       * Fix performance issue:\n       * https://github.com/xieziyu/angular2-draggable/issues/112\n       */\n      this.subscribeEvents();\n    }\n  }\n  subscribeEvents() {\n    this.draggingSub = fromEvent(document, 'mousemove', {\n      passive: false\n    }).subscribe(event => this.onMouseMove(event));\n    this.draggingSub.add(fromEvent(document, 'touchmove', {\n      passive: false\n    }).subscribe(event => this.onMouseMove(event)));\n    this.draggingSub.add(fromEvent(document, 'mouseup', {\n      passive: false\n    }).subscribe(() => this.putBack()));\n    // checking if browser is IE or Edge - https://github.com/xieziyu/angular2-draggable/issues/153\n    let isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\n    if (!isIEOrEdge) {\n      this.draggingSub.add(fromEvent(document, 'mouseleave', {\n        passive: false\n      }).subscribe(() => this.putBack()));\n    }\n    this.draggingSub.add(fromEvent(document, 'touchend', {\n      passive: false\n    }).subscribe(() => this.putBack()));\n    this.draggingSub.add(fromEvent(document, 'touchcancel', {\n      passive: false\n    }).subscribe(() => this.putBack()));\n  }\n  unsubscribeEvents() {\n    this.draggingSub.unsubscribe();\n    this.draggingSub = null;\n  }\n  boundsCheck() {\n    if (this.bounds) {\n      let boundary = this.bounds.getBoundingClientRect();\n      let elem = this.el.nativeElement.getBoundingClientRect();\n      let result = {\n        top: this.outOfBounds.top ? true : boundary.top < elem.top,\n        right: this.outOfBounds.right ? true : boundary.right > elem.right,\n        bottom: this.outOfBounds.bottom ? true : boundary.bottom > elem.bottom,\n        left: this.outOfBounds.left ? true : boundary.left < elem.left\n      };\n      if (this.inBounds) {\n        if (!result.top) {\n          this.tempTrans.y -= (elem.top - boundary.top) / this.scale;\n        }\n        if (!result.bottom) {\n          this.tempTrans.y -= (elem.bottom - boundary.bottom) / this.scale;\n        }\n        if (!result.right) {\n          this.tempTrans.x -= (elem.right - boundary.right) / this.scale;\n        }\n        if (!result.left) {\n          this.tempTrans.x -= (elem.left - boundary.left) / this.scale;\n        }\n        this.transform();\n      }\n      return result;\n    }\n    return null;\n  }\n  /** Get current offset */\n  getCurrentOffset() {\n    return this.currTrans.value;\n  }\n  putBack() {\n    if (this._zIndex) {\n      this.renderer.setStyle(this.el.nativeElement, 'z-index', this._zIndex);\n    } else if (this.zIndexMoving) {\n      if (this.oldZIndex) {\n        this.renderer.setStyle(this.el.nativeElement, 'z-index', this.oldZIndex);\n      } else {\n        this.el.nativeElement.style.removeProperty('z-index');\n      }\n    }\n    if (this.moving) {\n      this.stopped.emit(this.el.nativeElement);\n      // Remove the helper div:\n      this._helperBlock.remove();\n      if (this.needTransform) {\n        if (Position.isIPosition(this.position)) {\n          this.oldTrans.set(this.position);\n        } else {\n          this.oldTrans.reset();\n        }\n        this.transform();\n        this.needTransform = false;\n      }\n      if (this.bounds) {\n        let edgeEv = this.boundsCheck();\n        if (edgeEv) {\n          this.edge.emit(edgeEv);\n        }\n      }\n      this.moving = false;\n      this.endOffset.emit(this.currTrans.value);\n      if (this.trackPosition) {\n        this.oldTrans.add(this.tempTrans);\n      }\n      this.tempTrans.reset();\n      if (!this.trackPosition) {\n        this.transform();\n      }\n      const element = this.getDragEl();\n      this.renderer.removeClass(element, 'ng-dragging');\n      /**\n       * Fix performance issue:\n       * https://github.com/xieziyu/angular2-draggable/issues/112\n       */\n      this.unsubscribeEvents();\n    }\n  }\n  checkHandleTarget(target, element) {\n    // Checks if the target is the element clicked, then checks each child element of element as well\n    // Ignores button clicks\n    // Ignore elements of type button\n    if (element.tagName === 'BUTTON') {\n      return false;\n    }\n    // If the target was found, return true (handle was found)\n    if (element === target) {\n      return true;\n    }\n    // Recursively iterate this elements children\n    for (let child in element.children) {\n      if (element.children.hasOwnProperty(child)) {\n        if (this.checkHandleTarget(target, element.children[child])) {\n          return true;\n        }\n      }\n    }\n    // Handle was not found in this lineage\n    // Note: return false is ignore unless it is the parent element\n    return false;\n  }\n  onMouseDown(event) {\n    // 1. skip right click;\n    if (event instanceof MouseEvent && event.button === 2) {\n      return;\n    }\n    // 2. if handle is set, the element can only be moved by handle\n    let target = event.target || event.srcElement;\n    if (this.handle !== undefined && !this.checkHandleTarget(target, this.handle)) {\n      return;\n    }\n    // 3. if allow drag is set to false, ignore the mousedown\n    if (this.allowDrag === false) {\n      return;\n    }\n    if (this.preventDefaultEvent) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    this.orignal = Position.fromEvent(event, this.getDragEl());\n    this.pickUp();\n  }\n  onMouseMove(event) {\n    if (this.moving && this.allowDrag) {\n      if (this.preventDefaultEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n      // Add a transparent helper div:\n      this._helperBlock.add();\n      this.moveTo(Position.fromEvent(event, this.getDragEl()));\n    }\n  }\n  static {\n    this.ɵfac = function AngularDraggableDirective_Factory(t) {\n      return new (t || AngularDraggableDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: AngularDraggableDirective,\n      selectors: [[\"\", \"ngDraggable\", \"\"]],\n      hostBindings: function AngularDraggableDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mousedown\", function AngularDraggableDirective_mousedown_HostBindingHandler($event) {\n            return ctx.onMouseDown($event);\n          })(\"touchstart\", function AngularDraggableDirective_touchstart_HostBindingHandler($event) {\n            return ctx.onMouseDown($event);\n          });\n        }\n      },\n      inputs: {\n        handle: \"handle\",\n        bounds: \"bounds\",\n        outOfBounds: \"outOfBounds\",\n        gridSize: \"gridSize\",\n        zIndexMoving: \"zIndexMoving\",\n        zIndex: \"zIndex\",\n        inBounds: \"inBounds\",\n        trackPosition: \"trackPosition\",\n        scale: \"scale\",\n        preventDefaultEvent: \"preventDefaultEvent\",\n        position: \"position\",\n        lockAxis: \"lockAxis\",\n        ngDraggable: \"ngDraggable\"\n      },\n      outputs: {\n        started: \"started\",\n        stopped: \"stopped\",\n        edge: \"edge\",\n        movingOffset: \"movingOffset\",\n        endOffset: \"endOffset\"\n      },\n      exportAs: [\"ngDraggable\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularDraggableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngDraggable]',\n      exportAs: 'ngDraggable'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    started: [{\n      type: Output\n    }],\n    stopped: [{\n      type: Output\n    }],\n    edge: [{\n      type: Output\n    }],\n    handle: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    outOfBounds: [{\n      type: Input\n    }],\n    gridSize: [{\n      type: Input\n    }],\n    zIndexMoving: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    inBounds: [{\n      type: Input\n    }],\n    trackPosition: [{\n      type: Input\n    }],\n    scale: [{\n      type: Input\n    }],\n    preventDefaultEvent: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    lockAxis: [{\n      type: Input\n    }],\n    movingOffset: [{\n      type: Output\n    }],\n    endOffset: [{\n      type: Output\n    }],\n    ngDraggable: [{\n      type: Input\n    }],\n    onMouseDown: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['touchstart', ['$event']]\n    }]\n  });\n})();\nclass ResizeHandle {\n  constructor(parent, renderer, type, css, onMouseDown, existHandle) {\n    this.parent = parent;\n    this.renderer = renderer;\n    this.type = type;\n    this.css = css;\n    this.onMouseDown = onMouseDown;\n    this.existHandle = existHandle;\n    // generate handle div or using exist handle\n    let handle = this.existHandle || renderer.createElement('div');\n    renderer.addClass(handle, 'ng-resizable-handle');\n    renderer.addClass(handle, css);\n    // add default diagonal for se handle\n    if (type === 'se') {\n      renderer.addClass(handle, 'ng-resizable-diagonal');\n    }\n    // append div to parent\n    if (this.parent && !this.existHandle) {\n      parent.appendChild(handle);\n    }\n    // create and register event listener\n    this._onResize = event => {\n      onMouseDown(event, this);\n    };\n    handle.addEventListener('mousedown', this._onResize, {\n      passive: false\n    });\n    handle.addEventListener('touchstart', this._onResize, {\n      passive: false\n    });\n    // done\n    this._handle = handle;\n  }\n  dispose() {\n    this._handle.removeEventListener('mousedown', this._onResize);\n    this._handle.removeEventListener('touchstart', this._onResize);\n    if (this.parent && !this.existHandle) {\n      this.parent.removeChild(this._handle);\n    }\n    this._handle = null;\n    this._onResize = null;\n  }\n  get el() {\n    return this._handle;\n  }\n}\nclass Size {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n  static getCurrent(el) {\n    let size = new Size(0, 0);\n    if (window) {\n      const computed = window.getComputedStyle(el);\n      if (computed) {\n        size.width = parseInt(computed.getPropertyValue('width'), 10);\n        size.height = parseInt(computed.getPropertyValue('height'), 10);\n      }\n      return size;\n    } else {\n      console.error('Not Supported!');\n      return null;\n    }\n  }\n  static copy(s) {\n    return new Size(0, 0).set(s);\n  }\n  set(s) {\n    this.width = s.width;\n    this.height = s.height;\n    return this;\n  }\n}\nclass AngularResizableDirective {\n  /** Disables the resizable if set to false. */\n  set ngResizable(v) {\n    if (v !== undefined && v !== null && v !== '') {\n      this._resizable = !!v;\n      this.updateResizable();\n    }\n  }\n  constructor(el, renderer) {\n    this.el = el;\n    this.renderer = renderer;\n    this._resizable = true;\n    this._handles = {};\n    this._handleType = [];\n    this._handleResizing = null;\n    this._direction = null;\n    this._directionChanged = null;\n    this._aspectRatio = 0;\n    this._containment = null;\n    this._origMousePos = null;\n    /** Original Size and Position */\n    this._origSize = null;\n    this._origPos = null;\n    /** Current Size and Position */\n    this._currSize = null;\n    this._currPos = null;\n    /** Initial Size and Position */\n    this._initSize = null;\n    this._initPos = null;\n    /** Snap to gird */\n    this._gridSize = null;\n    this._bounding = null;\n    /**\n     * Bugfix: iFrames, and context unrelated elements block all events, and are unusable\n     * https://github.com/xieziyu/angular2-draggable/issues/84\n     */\n    this._helperBlock = null;\n    this.draggingSub = null;\n    this._adjusted = false;\n    /**\n     * Which handles can be used for resizing.\n     * @example\n     * [rzHandles] = \"'n,e,s,w,se,ne,sw,nw'\"\n     * equals to: [rzHandles] = \"'all'\"\n     *\n     * */\n    this.rzHandles = 'e,s,se';\n    /**\n     * Using exist handles for resizing instead of generate them.\n     * @example\n     * [rzHandleDoms] = {\n     *   e: handelE,\n     *   s: handelS,\n     *   se: handelSE\n     * };\n     * */\n    this.rzHandleDoms = {};\n    /**\n     * Whether the element should be constrained to a specific aspect ratio.\n     *  Multiple types supported:\n     *  boolean: When set to true, the element will maintain its original aspect ratio.\n     *  number: Force the element to maintain a specific aspect ratio during resizing.\n     */\n    this.rzAspectRatio = false;\n    /**\n     * Constrains resizing to within the bounds of the specified element or region.\n     *  Multiple types supported:\n     *  Selector: The resizable element will be contained to the bounding box of the first element found by the selector.\n     *            If no element is found, no containment will be set.\n     *  Element: The resizable element will be contained to the bounding box of this element.\n     *  String: Possible values: \"parent\".\n     */\n    this.rzContainment = null;\n    /**\n     * Snaps the resizing element to a grid, every x and y pixels.\n     * A number for both width and height or an array values like [ x, y ]\n     */\n    this.rzGrid = null;\n    /** The minimum width the resizable should be allowed to resize to. */\n    this.rzMinWidth = null;\n    /** The minimum height the resizable should be allowed to resize to. */\n    this.rzMinHeight = null;\n    /** The maximum width the resizable should be allowed to resize to. */\n    this.rzMaxWidth = null;\n    /** The maximum height the resizable should be allowed to resize to. */\n    this.rzMaxHeight = null;\n    /** Input css scale transform of element so translations are correct */\n    this.rzScale = 1;\n    /** Whether to prevent default event */\n    this.preventDefaultEvent = true;\n    /** emitted when start resizing */\n    this.rzStart = new EventEmitter();\n    /** emitted when start resizing */\n    this.rzResizing = new EventEmitter();\n    /** emitted when stop resizing */\n    this.rzStop = new EventEmitter();\n    this._helperBlock = new HelperBlock(el.nativeElement, renderer);\n  }\n  ngOnChanges(changes) {\n    if (changes['rzHandles'] && !changes['rzHandles'].isFirstChange()) {\n      this.updateResizable();\n    }\n    if (changes['rzAspectRatio'] && !changes['rzAspectRatio'].isFirstChange()) {\n      this.updateAspectRatio();\n    }\n    if (changes['rzContainment'] && !changes['rzContainment'].isFirstChange()) {\n      this.updateContainment();\n    }\n  }\n  ngOnInit() {\n    this.updateResizable();\n  }\n  ngOnDestroy() {\n    this.removeHandles();\n    this._containment = null;\n    this._helperBlock.dispose();\n    this._helperBlock = null;\n  }\n  ngAfterViewInit() {\n    const elm = this.el.nativeElement;\n    this._initSize = Size.getCurrent(elm);\n    this._initPos = Position.getCurrent(elm);\n    this._currSize = Size.copy(this._initSize);\n    this._currPos = Position.copy(this._initPos);\n    this.updateAspectRatio();\n    this.updateContainment();\n  }\n  /** A method to reset size */\n  resetSize() {\n    this._currSize = Size.copy(this._initSize);\n    this._currPos = Position.copy(this._initPos);\n    this.doResize();\n  }\n  /** A method to get current status */\n  getStatus() {\n    if (!this._currPos || !this._currSize) {\n      return null;\n    }\n    return {\n      size: {\n        width: this._currSize.width,\n        height: this._currSize.height\n      },\n      position: {\n        top: this._currPos.y,\n        left: this._currPos.x\n      }\n    };\n  }\n  updateResizable() {\n    const element = this.el.nativeElement;\n    // clear handles:\n    this.renderer.removeClass(element, 'ng-resizable');\n    this.removeHandles();\n    // create new ones:\n    if (this._resizable) {\n      this.renderer.addClass(element, 'ng-resizable');\n      this.createHandles();\n    }\n  }\n  /** Use it to update aspect */\n  updateAspectRatio() {\n    if (typeof this.rzAspectRatio === 'boolean') {\n      if (this.rzAspectRatio && this._currSize.height) {\n        this._aspectRatio = this._currSize.width / this._currSize.height;\n      } else {\n        this._aspectRatio = 0;\n      }\n    } else {\n      let r = Number(this.rzAspectRatio);\n      this._aspectRatio = isNaN(r) ? 0 : r;\n    }\n  }\n  /** Use it to update containment */\n  updateContainment() {\n    if (!this.rzContainment) {\n      this._containment = null;\n      return;\n    }\n    if (typeof this.rzContainment === 'string') {\n      if (this.rzContainment === 'parent') {\n        this._containment = this.el.nativeElement.parentElement;\n      } else {\n        this._containment = document.querySelector(this.rzContainment);\n      }\n    } else {\n      this._containment = this.rzContainment;\n    }\n  }\n  /** Use it to create handle divs */\n  createHandles() {\n    if (!this.rzHandles) {\n      return;\n    }\n    let tmpHandleTypes;\n    if (typeof this.rzHandles === 'string') {\n      if (this.rzHandles === 'all') {\n        tmpHandleTypes = ['n', 'e', 's', 'w', 'ne', 'se', 'nw', 'sw'];\n      } else {\n        tmpHandleTypes = this.rzHandles.replace(/ /g, '').toLowerCase().split(',');\n      }\n      for (let type of tmpHandleTypes) {\n        // default handle theme: ng-resizable-$type.\n        let handle = this.createHandleByType(type, `ng-resizable-${type}`);\n        if (handle) {\n          this._handleType.push(type);\n          this._handles[type] = handle;\n        }\n      }\n    } else {\n      tmpHandleTypes = Object.keys(this.rzHandles);\n      for (let type of tmpHandleTypes) {\n        // custom handle theme.\n        let handle = this.createHandleByType(type, this.rzHandles[type]);\n        if (handle) {\n          this._handleType.push(type);\n          this._handles[type] = handle;\n        }\n      }\n    }\n  }\n  /** Use it to create a handle */\n  createHandleByType(type, css) {\n    const _el = this.el.nativeElement;\n    const _h = this.rzHandleDoms[type] ? this.rzHandleDoms[type].nativeElement : null;\n    if (!type.match(/^(se|sw|ne|nw|n|e|s|w)$/)) {\n      console.error('Invalid handle type:', type);\n      return null;\n    }\n    return new ResizeHandle(_el, this.renderer, type, css, this.onMouseDown.bind(this), _h);\n  }\n  removeHandles() {\n    for (let type of this._handleType) {\n      this._handles[type].dispose();\n    }\n    this._handleType = [];\n    this._handles = {};\n  }\n  onMouseDown(event, handle) {\n    // skip right click;\n    if (event instanceof MouseEvent && event.button === 2) {\n      return;\n    }\n    if (this.preventDefaultEvent) {\n      // prevent default events\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    if (!this._handleResizing) {\n      this._origMousePos = Position.fromEvent(event);\n      this.startResize(handle);\n      this.subscribeEvents();\n    }\n  }\n  subscribeEvents() {\n    this.draggingSub = fromEvent(document, 'mousemove', {\n      passive: false\n    }).subscribe(event => this.onMouseMove(event));\n    this.draggingSub.add(fromEvent(document, 'touchmove', {\n      passive: false\n    }).subscribe(event => this.onMouseMove(event)));\n    this.draggingSub.add(fromEvent(document, 'mouseup', {\n      passive: false\n    }).subscribe(() => this.onMouseLeave()));\n    // fix for issue #164\n    let isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\n    if (!isIEOrEdge) {\n      this.draggingSub.add(fromEvent(document, 'mouseleave', {\n        passive: false\n      }).subscribe(() => this.onMouseLeave()));\n    }\n    this.draggingSub.add(fromEvent(document, 'touchend', {\n      passive: false\n    }).subscribe(() => this.onMouseLeave()));\n    this.draggingSub.add(fromEvent(document, 'touchcancel', {\n      passive: false\n    }).subscribe(() => this.onMouseLeave()));\n  }\n  unsubscribeEvents() {\n    this.draggingSub.unsubscribe();\n    this.draggingSub = null;\n  }\n  onMouseLeave() {\n    if (this._handleResizing) {\n      this.stopResize();\n      this._origMousePos = null;\n      this.unsubscribeEvents();\n    }\n  }\n  onMouseMove(event) {\n    if (this._handleResizing && this._resizable && this._origMousePos && this._origPos && this._origSize) {\n      this.resizeTo(Position.fromEvent(event));\n      this.onResizing();\n    }\n  }\n  startResize(handle) {\n    const elm = this.el.nativeElement;\n    this._origSize = Size.getCurrent(elm);\n    this._origPos = Position.getCurrent(elm); // x: left, y: top\n    this._currSize = Size.copy(this._origSize);\n    this._currPos = Position.copy(this._origPos);\n    if (this._containment) {\n      this.getBounding();\n    }\n    this.getGridSize();\n    // Add a transparent helper div:\n    this._helperBlock.add();\n    this._handleResizing = handle;\n    this.updateDirection();\n    this.rzStart.emit(this.getResizingEvent());\n  }\n  stopResize() {\n    // Remove the helper div:\n    this._helperBlock.remove();\n    this.rzStop.emit(this.getResizingEvent());\n    this._handleResizing = null;\n    this._direction = null;\n    this._origSize = null;\n    this._origPos = null;\n    if (this._containment) {\n      this.resetBounding();\n    }\n  }\n  onResizing() {\n    this.rzResizing.emit(this.getResizingEvent());\n  }\n  getResizingEvent() {\n    return {\n      host: this.el.nativeElement,\n      handle: this._handleResizing ? this._handleResizing.el : null,\n      size: {\n        width: this._currSize.width,\n        height: this._currSize.height\n      },\n      position: {\n        top: this._currPos.y,\n        left: this._currPos.x\n      },\n      direction: {\n        ...this._directionChanged\n      }\n    };\n  }\n  updateDirection() {\n    this._direction = {\n      n: !!this._handleResizing.type.match(/n/),\n      s: !!this._handleResizing.type.match(/s/),\n      w: !!this._handleResizing.type.match(/w/),\n      e: !!this._handleResizing.type.match(/e/)\n    };\n    this._directionChanged = {\n      ...this._direction\n    };\n    // if aspect ration should be preserved:\n    if (this.rzAspectRatio) {\n      // if north then west (unless ne)\n      if (this._directionChanged.n && !this._directionChanged.e) {\n        this._directionChanged.w = true;\n      }\n      // if south then east (unless sw)\n      if (this._directionChanged.s && !this._directionChanged.w) {\n        this._directionChanged.e = true;\n      }\n      // if east then south (unless ne)\n      if (this._directionChanged.e && !this._directionChanged.n) {\n        this._directionChanged.s = true;\n      }\n      // if west then south (unless nw)\n      if (this._directionChanged.w && !this._directionChanged.n) {\n        this._directionChanged.s = true;\n      }\n    }\n  }\n  resizeTo(p) {\n    p.subtract(this._origMousePos).divide(this.rzScale);\n    const tmpX = Math.round(p.x / this._gridSize.x) * this._gridSize.x;\n    const tmpY = Math.round(p.y / this._gridSize.y) * this._gridSize.y;\n    if (this._direction.n) {\n      // n, ne, nw\n      this._currPos.y = this._origPos.y + tmpY;\n      this._currSize.height = this._origSize.height - tmpY;\n    } else if (this._direction.s) {\n      // s, se, sw\n      this._currSize.height = this._origSize.height + tmpY;\n    }\n    if (this._direction.e) {\n      // e, ne, se\n      this._currSize.width = this._origSize.width + tmpX;\n    } else if (this._direction.w) {\n      // w, nw, sw\n      this._currSize.width = this._origSize.width - tmpX;\n      this._currPos.x = this._origPos.x + tmpX;\n    }\n    this.checkBounds();\n    this.checkSize();\n    this.adjustByRatio();\n    this.doResize();\n  }\n  doResize() {\n    const container = this.el.nativeElement;\n    if (!this._direction || this._direction.n || this._direction.s || this._aspectRatio) {\n      this.renderer.setStyle(container, 'height', this._currSize.height + 'px');\n    }\n    if (!this._direction || this._direction.w || this._direction.e || this._aspectRatio) {\n      this.renderer.setStyle(container, 'width', this._currSize.width + 'px');\n    }\n    this.renderer.setStyle(container, 'left', this._currPos.x + 'px');\n    this.renderer.setStyle(container, 'top', this._currPos.y + 'px');\n  }\n  adjustByRatio() {\n    if (this._aspectRatio && !this._adjusted) {\n      if (this._direction.e || this._direction.w) {\n        const newHeight = Math.floor(this._currSize.width / this._aspectRatio);\n        if (this._direction.n) {\n          this._currPos.y += this._currSize.height - newHeight;\n        }\n        this._currSize.height = newHeight;\n      } else {\n        const newWidth = Math.floor(this._aspectRatio * this._currSize.height);\n        if (this._direction.n) {\n          this._currPos.x += this._currSize.width - newWidth;\n        }\n        this._currSize.width = newWidth;\n      }\n    }\n  }\n  checkBounds() {\n    if (this._containment) {\n      const maxWidth = this._bounding.width - this._bounding.pr - this._bounding.deltaL - this._bounding.translateX - this._currPos.x;\n      const maxHeight = this._bounding.height - this._bounding.pb - this._bounding.deltaT - this._bounding.translateY - this._currPos.y;\n      if (this._direction.n && this._currPos.y + this._bounding.translateY < 0) {\n        this._currPos.y = -this._bounding.translateY;\n        this._currSize.height = this._origSize.height + this._origPos.y + this._bounding.translateY;\n      }\n      if (this._direction.w && this._currPos.x + this._bounding.translateX < 0) {\n        this._currPos.x = -this._bounding.translateX;\n        this._currSize.width = this._origSize.width + this._origPos.x + this._bounding.translateX;\n      }\n      if (this._currSize.width > maxWidth) {\n        this._currSize.width = maxWidth;\n      }\n      if (this._currSize.height > maxHeight) {\n        this._currSize.height = maxHeight;\n      }\n      /**\n       * Fix Issue: Additional check for aspect ratio\n       * https://github.com/xieziyu/angular2-draggable/issues/132\n       */\n      if (this._aspectRatio) {\n        this._adjusted = false;\n        if ((this._direction.w || this._direction.e) && this._currSize.width / this._aspectRatio >= maxHeight) {\n          const newWidth = Math.floor(maxHeight * this._aspectRatio);\n          if (this._direction.w) {\n            this._currPos.x += this._currSize.width - newWidth;\n          }\n          this._currSize.width = newWidth;\n          this._currSize.height = maxHeight;\n          this._adjusted = true;\n        }\n        if ((this._direction.n || this._direction.s) && this._currSize.height * this._aspectRatio >= maxWidth) {\n          const newHeight = Math.floor(maxWidth / this._aspectRatio);\n          if (this._direction.n) {\n            this._currPos.y += this._currSize.height - newHeight;\n          }\n          this._currSize.width = maxWidth;\n          this._currSize.height = newHeight;\n          this._adjusted = true;\n        }\n      }\n    }\n  }\n  checkSize() {\n    const minHeight = !this.rzMinHeight ? 1 : this.rzMinHeight;\n    const minWidth = !this.rzMinWidth ? 1 : this.rzMinWidth;\n    if (this._currSize.height < minHeight) {\n      this._currSize.height = minHeight;\n      if (this._direction.n) {\n        this._currPos.y = this._origPos.y + (this._origSize.height - minHeight);\n      }\n    }\n    if (this._currSize.width < minWidth) {\n      this._currSize.width = minWidth;\n      if (this._direction.w) {\n        this._currPos.x = this._origPos.x + (this._origSize.width - minWidth);\n      }\n    }\n    if (this.rzMaxHeight && this._currSize.height > this.rzMaxHeight) {\n      this._currSize.height = this.rzMaxHeight;\n      if (this._direction.n) {\n        this._currPos.y = this._origPos.y + (this._origSize.height - this.rzMaxHeight);\n      }\n    }\n    if (this.rzMaxWidth && this._currSize.width > this.rzMaxWidth) {\n      this._currSize.width = this.rzMaxWidth;\n      if (this._direction.w) {\n        this._currPos.x = this._origPos.x + (this._origSize.width - this.rzMaxWidth);\n      }\n    }\n  }\n  getBounding() {\n    const el = this._containment;\n    const computed = window.getComputedStyle(el);\n    if (computed) {\n      let p = computed.getPropertyValue('position');\n      const nativeEl = window.getComputedStyle(this.el.nativeElement);\n      let transforms = nativeEl.getPropertyValue('transform').replace(/[^-\\d,]/g, '').split(',');\n      this._bounding = {};\n      this._bounding.width = el.clientWidth;\n      this._bounding.height = el.clientHeight;\n      this._bounding.pr = parseInt(computed.getPropertyValue('padding-right'), 10);\n      this._bounding.pb = parseInt(computed.getPropertyValue('padding-bottom'), 10);\n      this._bounding.deltaL = this.el.nativeElement.offsetLeft - this._currPos.x;\n      this._bounding.deltaT = this.el.nativeElement.offsetTop - this._currPos.y;\n      if (transforms.length >= 6) {\n        this._bounding.translateX = parseInt(transforms[4], 10);\n        this._bounding.translateY = parseInt(transforms[5], 10);\n      } else {\n        this._bounding.translateX = 0;\n        this._bounding.translateY = 0;\n      }\n      this._bounding.position = computed.getPropertyValue('position');\n      if (p === 'static') {\n        this.renderer.setStyle(el, 'position', 'relative');\n      }\n    }\n  }\n  resetBounding() {\n    if (this._bounding && this._bounding.position === 'static') {\n      this.renderer.setStyle(this._containment, 'position', 'relative');\n    }\n    this._bounding = null;\n  }\n  getGridSize() {\n    // set default value:\n    this._gridSize = {\n      x: 1,\n      y: 1\n    };\n    if (this.rzGrid) {\n      if (typeof this.rzGrid === 'number') {\n        this._gridSize = {\n          x: this.rzGrid,\n          y: this.rzGrid\n        };\n      } else if (Array.isArray(this.rzGrid)) {\n        this._gridSize = {\n          x: this.rzGrid[0],\n          y: this.rzGrid[1]\n        };\n      }\n    }\n  }\n  static {\n    this.ɵfac = function AngularResizableDirective_Factory(t) {\n      return new (t || AngularResizableDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: AngularResizableDirective,\n      selectors: [[\"\", \"ngResizable\", \"\"]],\n      inputs: {\n        ngResizable: \"ngResizable\",\n        rzHandles: \"rzHandles\",\n        rzHandleDoms: \"rzHandleDoms\",\n        rzAspectRatio: \"rzAspectRatio\",\n        rzContainment: \"rzContainment\",\n        rzGrid: \"rzGrid\",\n        rzMinWidth: \"rzMinWidth\",\n        rzMinHeight: \"rzMinHeight\",\n        rzMaxWidth: \"rzMaxWidth\",\n        rzMaxHeight: \"rzMaxHeight\",\n        rzScale: \"rzScale\",\n        preventDefaultEvent: \"preventDefaultEvent\"\n      },\n      outputs: {\n        rzStart: \"rzStart\",\n        rzResizing: \"rzResizing\",\n        rzStop: \"rzStop\"\n      },\n      exportAs: [\"ngResizable\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularResizableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngResizable]',\n      exportAs: 'ngResizable'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    ngResizable: [{\n      type: Input\n    }],\n    rzHandles: [{\n      type: Input\n    }],\n    rzHandleDoms: [{\n      type: Input\n    }],\n    rzAspectRatio: [{\n      type: Input\n    }],\n    rzContainment: [{\n      type: Input\n    }],\n    rzGrid: [{\n      type: Input\n    }],\n    rzMinWidth: [{\n      type: Input\n    }],\n    rzMinHeight: [{\n      type: Input\n    }],\n    rzMaxWidth: [{\n      type: Input\n    }],\n    rzMaxHeight: [{\n      type: Input\n    }],\n    rzScale: [{\n      type: Input\n    }],\n    preventDefaultEvent: [{\n      type: Input\n    }],\n    rzStart: [{\n      type: Output\n    }],\n    rzResizing: [{\n      type: Output\n    }],\n    rzStop: [{\n      type: Output\n    }]\n  });\n})();\nclass AngularDraggableModule {\n  static {\n    this.ɵfac = function AngularDraggableModule_Factory(t) {\n      return new (t || AngularDraggableModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: AngularDraggableModule,\n      declarations: [AngularDraggableDirective, AngularResizableDirective],\n      exports: [AngularDraggableDirective, AngularResizableDirective]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularDraggableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [AngularDraggableDirective, AngularResizableDirective],\n      exports: [AngularDraggableDirective, AngularResizableDirective]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of angular2-draggable\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularDraggableDirective, AngularDraggableModule, AngularResizableDirective, Position };\n"],
  "mappings": "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",
  "names": []
}
